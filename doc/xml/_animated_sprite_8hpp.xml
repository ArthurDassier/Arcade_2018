<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_animated_sprite_8hpp" kind="file" language="C++">
    <compoundname>AnimatedSprite.hpp</compoundname>
    <includes local="no">SFML/Graphics/RenderTarget.hpp</includes>
    <includes local="no">SFML/System/Time.hpp</includes>
    <includes local="no">SFML/Graphics/Drawable.hpp</includes>
    <includes local="no">SFML/Graphics/Transformable.hpp</includes>
    <includes local="no">SFML/System/Vector2.hpp</includes>
    <includes refid="_animation_8hpp" local="yes">Animation.hpp</includes>
    <includedby refid="_animated_sprite_8cpp" local="yes">lib/SFML/AnimatedSprite.cpp</includedby>
    <includedby refid="_animation_test_8cpp" local="yes">lib/SFML/AnimationTest.cpp</includedby>
    <includedby refid="_class_s_f_m_l_8hpp" local="yes">lib/SFML/ClassSFML.hpp</includedby>
    <incdepgraph>
      <node id="144">
        <label>SFML/Graphics.hpp</label>
      </node>
      <node id="141">
        <label>SFML/Graphics/Transformable.hpp</label>
      </node>
      <node id="137">
        <label>lib/SFML/AnimatedSprite.hpp</label>
        <link refid="_animated_sprite_8hpp"/>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
      </node>
      <node id="142">
        <label>SFML/System/Vector2.hpp</label>
      </node>
      <node id="140">
        <label>SFML/Graphics/Drawable.hpp</label>
      </node>
      <node id="143">
        <label>Animation.hpp</label>
        <link refid="_animation_8hpp"/>
        <childnode refid="144" relation="include">
        </childnode>
      </node>
      <node id="138">
        <label>SFML/Graphics/RenderTarget.hpp</label>
      </node>
      <node id="139">
        <label>SFML/System/Time.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="146">
        <label>lib/SFML/AnimatedSprite.cpp</label>
        <link refid="_animated_sprite_8cpp"/>
      </node>
      <node id="145">
        <label>lib/SFML/AnimatedSprite.hpp</label>
        <link refid="_animated_sprite_8hpp"/>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
      </node>
      <node id="147">
        <label>lib/SFML/AnimationTest.cpp</label>
        <link refid="_animation_test_8cpp"/>
      </node>
      <node id="150">
        <label>tests/tests_SFML.cpp</label>
        <link refid="tests___s_f_m_l_8cpp"/>
      </node>
      <node id="148">
        <label>lib/SFML/ClassSFML.hpp</label>
        <link refid="_class_s_f_m_l_8hpp"/>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
      </node>
      <node id="149">
        <label>lib/SFML/ClassSFML.cpp</label>
        <link refid="_class_s_f_m_l_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_animated_sprite" prot="public">AnimatedSprite</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>EPITECH<sp/>PROJECT,<sp/>2019</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**<sp/>AnimatedSprite.hpp</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>File<sp/>description:</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>AnimatedSprite</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SFML/Graphics/RenderTarget.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SFML/System/Time.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SFML/Graphics/Drawable.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SFML/Graphics/Transformable.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SFML/System/Vector2.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_animation_8hpp" kindref="compound">Animation.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="class_animated_sprite" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_animated_sprite" kindref="compound">AnimatedSprite</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>sf::Drawable,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>sf::Transformable</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_animated_sprite_1a097ab8444824e7085d71a1f7144e7763" kindref="member">AnimatedSprite</ref>(sf::Time<sp/>frameTime<sp/>=<sp/>sf::seconds(0.2f),<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>paused<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>looped<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_animated_sprite_1a17a41ff812631a9d8947d272933d6696" kindref="member">update</ref>(sf::Time<sp/>deltaTime);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_animated_sprite_1ab1afc57d90d57a0c4bc4f5b090f2dacf" kindref="member">setAnimation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_animation" kindref="compound">Animation</ref>&amp;<sp/>animation);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_animated_sprite_1af598fab5c3599ccc5ed1e2d4fefa68cc" kindref="member">setFrameTime</ref>(sf::Time<sp/>time);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_animated_sprite_1a203b968f1cb374cca5dbc89716174020" kindref="member">play</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_animated_sprite_1a203b968f1cb374cca5dbc89716174020" kindref="member">play</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_animation" kindref="compound">Animation</ref>&amp;<sp/>animation);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_animated_sprite_1a48384db59427423b5c1d98f6ee94fe45" kindref="member">pause</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_animated_sprite_1af9734f4346d3d2370322b2dcaeef133c" kindref="member">stop</ref>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_animated_sprite_1a855a5a48ea2e1c51c7c9304857dd2f8c" kindref="member">setLooped</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>looped);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_animated_sprite_1a1a96a0f6570efddd2eb26f89bc5b6f50" kindref="member">setColor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sf::Color&amp;<sp/>color);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_animation" kindref="compound">Animation</ref>*<sp/><ref refid="class_animated_sprite_1a03bacdbaf638cb6f7987e342980206c2" kindref="member">getAnimation</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf::FloatRect<sp/><ref refid="class_animated_sprite_1ac4c88435c8698f452629c5cd78bfb3c9" kindref="member">getLocalBounds</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf::FloatRect<sp/><ref refid="class_animated_sprite_1a86dca0906c53b3e630aaeac2f0085a0e" kindref="member">getGlobalBounds</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_animated_sprite_1aaf2c2fb0e1487e689af4a6bbeb7e3e85" kindref="member">isLooped</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_animated_sprite_1a55f450add05d45e5369a6ad24f9e438f" kindref="member">isPlaying</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf::Time<sp/><ref refid="class_animated_sprite_1a5291f8e24fe2c6e4284bc7ff9499ef77" kindref="member">getFrameTime</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_animated_sprite_1a0b3e38fffdc1d29f46fa08df9ef2a747" kindref="member">setFrame</ref>(std::size_t<sp/>newFrame,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>resetTime<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_animation" kindref="compound">Animation</ref>*<sp/>m_animation;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf::Time<sp/>m_frameTime;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf::Time<sp/>m_currentTime;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>m_currentFrame;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_isPaused;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_isLooped;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sf::Texture*<sp/>m_texture;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf::Vertex<sp/>m_vertices[4];</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(sf::RenderTarget&amp;<sp/>target,<sp/>sf::RenderStates<sp/>states)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="lib/SFML/AnimatedSprite.hpp"/>
  </compounddef>
</doxygen>
