<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="tests___s_f_m_l_8cpp" kind="file" language="C++">
    <compoundname>tests_SFML.cpp</compoundname>
    <includes local="no">criterion/criterion.h</includes>
    <includes local="no">criterion/redirect.h</includes>
    <includes refid="_class_s_f_m_l_8hpp" local="yes">ClassSFML.hpp</includes>
    <incdepgraph>
      <node id="255">
        <label>SFML/Graphics.hpp</label>
      </node>
      <node id="260">
        <label>functional</label>
      </node>
      <node id="253">
        <label>criterion/redirect.h</label>
      </node>
      <node id="256">
        <label>IGraphic.hpp</label>
        <link refid="_i_graphic_8hpp"/>
        <childnode refid="257" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
        <childnode refid="261" relation="include">
        </childnode>
      </node>
      <node id="259">
        <label>fstream</label>
      </node>
      <node id="251">
        <label>tests/tests_SFML.cpp</label>
        <link refid="tests___s_f_m_l_8cpp"/>
        <childnode refid="252" relation="include">
        </childnode>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
      </node>
      <node id="252">
        <label>criterion/criterion.h</label>
      </node>
      <node id="254">
        <label>ClassSFML.hpp</label>
        <link refid="_class_s_f_m_l_8hpp"/>
        <childnode refid="255" relation="include">
        </childnode>
        <childnode refid="256" relation="include">
        </childnode>
        <childnode refid="262" relation="include">
        </childnode>
      </node>
      <node id="258">
        <label>vector</label>
      </node>
      <node id="261">
        <label>iostream</label>
      </node>
      <node id="262">
        <label>ParsingConfig.hpp</label>
        <link refid="_parsing_config_8hpp"/>
        <childnode refid="261" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
      </node>
      <node id="257">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="tests___s_f_m_l_8cpp_1a8789d4d6a448183edc6af15b359e2594" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test</definition>
        <argsstring>(tests_SFML, test_getIsNewKeyIsTrue)</argsstring>
        <name>Test</name>
        <param>
          <type>tests_SFML</type>
        </param>
        <param>
          <type>test_getIsNewKeyIsTrue</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/tests_SFML.cpp" line="12" column="1" bodyfile="tests/tests_SFML.cpp" bodystart="12" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="tests___s_f_m_l_8cpp_1a8f3f3ebae1c9a8f62b61a76c94610b4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test</definition>
        <argsstring>(tests_SFML, test_getIsNewKeyIsFalse)</argsstring>
        <name>Test</name>
        <param>
          <type>tests_SFML</type>
        </param>
        <param>
          <type>test_getIsNewKeyIsFalse</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/tests_SFML.cpp" line="20" column="1" bodyfile="tests/tests_SFML.cpp" bodystart="20" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="tests___s_f_m_l_8cpp_1ac1758896bd72b3da2e8752254b6e2fe3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test</definition>
        <argsstring>(tests_SFML, test_getIsNewMapIsTrue)</argsstring>
        <name>Test</name>
        <param>
          <type>tests_SFML</type>
        </param>
        <param>
          <type>test_getIsNewMapIsTrue</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/tests_SFML.cpp" line="28" column="1" bodyfile="tests/tests_SFML.cpp" bodystart="28" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="tests___s_f_m_l_8cpp_1a3b115731159c34ace3a0fe023cda9af5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test</definition>
        <argsstring>(tests_SFML, test_getIsNewMapIsFalse)</argsstring>
        <name>Test</name>
        <param>
          <type>tests_SFML</type>
        </param>
        <param>
          <type>test_getIsNewMapIsFalse</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/tests_SFML.cpp" line="36" column="1" bodyfile="tests/tests_SFML.cpp" bodystart="36" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="tests___s_f_m_l_8cpp_1ab36d37a099ff957041d09ebf99e0517e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test</definition>
        <argsstring>(tests_SFML, test_getLastKeyIsTrue)</argsstring>
        <name>Test</name>
        <param>
          <type>tests_SFML</type>
        </param>
        <param>
          <type>test_getLastKeyIsTrue</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/tests_SFML.cpp" line="43" column="1" bodyfile="tests/tests_SFML.cpp" bodystart="43" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="tests___s_f_m_l_8cpp_1a425839e6f462571c221a65244ecb308d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test</definition>
        <argsstring>(tests_SFML, test_getLastKeyIsFalse)</argsstring>
        <name>Test</name>
        <param>
          <type>tests_SFML</type>
        </param>
        <param>
          <type>test_getLastKeyIsFalse</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/tests_SFML.cpp" line="51" column="1" bodyfile="tests/tests_SFML.cpp" bodystart="51" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="tests___s_f_m_l_8cpp_1a8e8ab3df15504d7b83a312c7900e3a62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test</definition>
        <argsstring>(tests_SFML, test_getScore)</argsstring>
        <name>Test</name>
        <param>
          <type>tests_SFML</type>
        </param>
        <param>
          <type>test_getScore</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/tests_SFML.cpp" line="59" column="1" bodyfile="tests/tests_SFML.cpp" bodystart="59" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="tests___s_f_m_l_8cpp_1a61d9437f6406edbedebbdbf6e4936894" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test</definition>
        <argsstring>(tests_SFML, test_getPathConfig)</argsstring>
        <name>Test</name>
        <param>
          <type>tests_SFML</type>
        </param>
        <param>
          <type>test_getPathConfig</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/tests_SFML.cpp" line="71" column="1" bodyfile="tests/tests_SFML.cpp" bodystart="71" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="tests___s_f_m_l_8cpp_1af913e923e2214c9387651752d1fa1127" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test</definition>
        <argsstring>(tests_SFML, test_getIsNewPathConfigIsTrue)</argsstring>
        <name>Test</name>
        <param>
          <type>tests_SFML</type>
        </param>
        <param>
          <type>test_getIsNewPathConfigIsTrue</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/tests_SFML.cpp" line="83" column="1" bodyfile="tests/tests_SFML.cpp" bodystart="83" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="tests___s_f_m_l_8cpp_1a74f6e404b0e38af46df70ee3a2e11f37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Test</definition>
        <argsstring>(tests_SFML, test_getIsNewPathConfigIsFalse)</argsstring>
        <name>Test</name>
        <param>
          <type>tests_SFML</type>
        </param>
        <param>
          <type>test_getIsNewPathConfigIsFalse</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/tests_SFML.cpp" line="91" column="1" bodyfile="tests/tests_SFML.cpp" bodystart="91" bodyend="97"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>EPITECH<sp/>PROJECT,<sp/>2019</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**<sp/>tests_sfml.cpp</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>File<sp/>description:</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>tests_sfml</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;criterion/criterion.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;criterion/redirect.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_class_s_f_m_l_8hpp" kindref="compound">ClassSFML.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="tests___s_f_m_l_8cpp_1a8789d4d6a448183edc6af15b359e2594" refkind="member"><highlight class="normal"><ref refid="tests___s_f_m_l_8cpp_1a8789d4d6a448183edc6af15b359e2594" kindref="member">Test</ref>(tests_SFML,<sp/>test_getIsNewKeyIsTrue)</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_class_s_f_m_l" kindref="compound">ClassSFML</ref><sp/>test;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>test.<ref refid="class_class_s_f_m_l_1afa4dc363da11512994f5964f53792990" kindref="member">setIsNewKey</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>cr_assert_eq(test.<ref refid="class_class_s_f_m_l_1a0858bffedeb0ccd39ee911c08ede455d" kindref="member">getIsNewKey</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="tests___s_f_m_l_8cpp_1a8f3f3ebae1c9a8f62b61a76c94610b4e" refkind="member"><highlight class="normal"><ref refid="tests___s_f_m_l_8cpp_1a8789d4d6a448183edc6af15b359e2594" kindref="member">Test</ref>(tests_SFML,<sp/>test_getIsNewKeyIsFalse)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_class_s_f_m_l" kindref="compound">ClassSFML</ref><sp/>test;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>test.<ref refid="class_class_s_f_m_l_1afa4dc363da11512994f5964f53792990" kindref="member">setIsNewKey</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>cr_assert_eq(test.<ref refid="class_class_s_f_m_l_1a0858bffedeb0ccd39ee911c08ede455d" kindref="member">getIsNewKey</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="tests___s_f_m_l_8cpp_1ac1758896bd72b3da2e8752254b6e2fe3" refkind="member"><highlight class="normal"><ref refid="tests___s_f_m_l_8cpp_1a8789d4d6a448183edc6af15b359e2594" kindref="member">Test</ref>(tests_SFML,<sp/>test_getIsNewMapIsTrue)</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_class_s_f_m_l" kindref="compound">ClassSFML</ref><sp/>test;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>test.<ref refid="class_class_s_f_m_l_1aeadd6368ac5b5d185a09cd1e7c1f9dcc" kindref="member">setIsNewMap</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>cr_assert_eq(test.<ref refid="class_class_s_f_m_l_1ab74066896f56b41f0d644c31048bf764" kindref="member">getIsNewMap</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="tests___s_f_m_l_8cpp_1a3b115731159c34ace3a0fe023cda9af5" refkind="member"><highlight class="normal"><ref refid="tests___s_f_m_l_8cpp_1a8789d4d6a448183edc6af15b359e2594" kindref="member">Test</ref>(tests_SFML,<sp/>test_getIsNewMapIsFalse)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_class_s_f_m_l" kindref="compound">ClassSFML</ref><sp/>test;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>test.<ref refid="class_class_s_f_m_l_1aeadd6368ac5b5d185a09cd1e7c1f9dcc" kindref="member">setIsNewMap</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>cr_assert_eq(test.<ref refid="class_class_s_f_m_l_1ab74066896f56b41f0d644c31048bf764" kindref="member">getIsNewMap</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43" refid="tests___s_f_m_l_8cpp_1ab36d37a099ff957041d09ebf99e0517e" refkind="member"><highlight class="normal"><ref refid="tests___s_f_m_l_8cpp_1a8789d4d6a448183edc6af15b359e2594" kindref="member">Test</ref>(tests_SFML,<sp/>test_getLastKeyIsTrue)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_class_s_f_m_l" kindref="compound">ClassSFML</ref><sp/>test;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>test.<ref refid="class_class_s_f_m_l_1aeb353a7928b673ceb10f12c4d5710305" kindref="member">setLastKey</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>cr_assert_eq(test.<ref refid="class_class_s_f_m_l_1a7ebdd83fe2ab4c1feb3788f27a3a1b6e" kindref="member">getLastKey</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="tests___s_f_m_l_8cpp_1a425839e6f462571c221a65244ecb308d" refkind="member"><highlight class="normal"><ref refid="tests___s_f_m_l_8cpp_1a8789d4d6a448183edc6af15b359e2594" kindref="member">Test</ref>(tests_SFML,<sp/>test_getLastKeyIsFalse)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_class_s_f_m_l" kindref="compound">ClassSFML</ref><sp/>test;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>test.<ref refid="class_class_s_f_m_l_1aeb353a7928b673ceb10f12c4d5710305" kindref="member">setLastKey</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>cr_assert_eq(test.<ref refid="class_class_s_f_m_l_1a7ebdd83fe2ab4c1feb3788f27a3a1b6e" kindref="member">getLastKey</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="tests___s_f_m_l_8cpp_1a8e8ab3df15504d7b83a312c7900e3a62" refkind="member"><highlight class="normal"><ref refid="tests___s_f_m_l_8cpp_1a8789d4d6a448183edc6af15b359e2594" kindref="member">Test</ref>(tests_SFML,<sp/>test_getScore)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_class_s_f_m_l" kindref="compound">ClassSFML</ref><sp/>test;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>test.<ref refid="class_class_s_f_m_l_1a42df0bacc5fa82cfc451722332304b50" kindref="member">setScore</ref>(0);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>cr_assert_eq(test.<ref refid="class_class_s_f_m_l_1a525c4cf493dfd9d68ea2bba3bd15b7e7" kindref="member">getScore</ref>(),<sp/>0);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>test.<ref refid="class_class_s_f_m_l_1a42df0bacc5fa82cfc451722332304b50" kindref="member">setScore</ref>(10);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>cr_assert_eq(test.<ref refid="class_class_s_f_m_l_1a525c4cf493dfd9d68ea2bba3bd15b7e7" kindref="member">getScore</ref>(),<sp/>10);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>test.<ref refid="class_class_s_f_m_l_1a42df0bacc5fa82cfc451722332304b50" kindref="member">setScore</ref>(900);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>cr_assert_eq(test.<ref refid="class_class_s_f_m_l_1a525c4cf493dfd9d68ea2bba3bd15b7e7" kindref="member">getScore</ref>(),<sp/>900);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="tests___s_f_m_l_8cpp_1a61d9437f6406edbedebbdbf6e4936894" refkind="member"><highlight class="normal"><ref refid="tests___s_f_m_l_8cpp_1a8789d4d6a448183edc6af15b359e2594" kindref="member">Test</ref>(tests_SFML,<sp/>test_getPathConfig)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_class_s_f_m_l" kindref="compound">ClassSFML</ref><sp/>test;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>test.<ref refid="class_class_s_f_m_l_1ac37b544f6179f33994e9fa189e15eea8" kindref="member">setPathConfig</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>cr_assert_eq(test.<ref refid="class_class_s_f_m_l_1aa83937866ca263758733952543eb8282" kindref="member">getPathConfig</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>test.<ref refid="class_class_s_f_m_l_1ac37b544f6179f33994e9fa189e15eea8" kindref="member">setPathConfig</ref>(</highlight><highlight class="stringliteral">&quot;coucou&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>cr_assert_eq(test.<ref refid="class_class_s_f_m_l_1aa83937866ca263758733952543eb8282" kindref="member">getPathConfig</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;coucou&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>test.<ref refid="class_class_s_f_m_l_1ac37b544f6179f33994e9fa189e15eea8" kindref="member">setPathConfig</ref>(</highlight><highlight class="stringliteral">&quot;./srcs/core/path_menu.config&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>cr_assert_eq(test.<ref refid="class_class_s_f_m_l_1aa83937866ca263758733952543eb8282" kindref="member">getPathConfig</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;./srcs/core/path_menu.config&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="tests___s_f_m_l_8cpp_1af913e923e2214c9387651752d1fa1127" refkind="member"><highlight class="normal"><ref refid="tests___s_f_m_l_8cpp_1a8789d4d6a448183edc6af15b359e2594" kindref="member">Test</ref>(tests_SFML,<sp/>test_getIsNewPathConfigIsTrue)</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_class_s_f_m_l" kindref="compound">ClassSFML</ref><sp/>test;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>test.<ref refid="class_class_s_f_m_l_1ab47a3c8fb83d5db1640105bd6771c3da" kindref="member">setIsNewPathConfig</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>cr_assert_eq(test.<ref refid="class_class_s_f_m_l_1a9f308ab330e1a85913cd17c8ef901d71" kindref="member">getIsNewPathConfig</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="tests___s_f_m_l_8cpp_1a74f6e404b0e38af46df70ee3a2e11f37" refkind="member"><highlight class="normal"><ref refid="tests___s_f_m_l_8cpp_1a8789d4d6a448183edc6af15b359e2594" kindref="member">Test</ref>(tests_SFML,<sp/>test_getIsNewPathConfigIsFalse)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_class_s_f_m_l" kindref="compound">ClassSFML</ref><sp/>test;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>test.<ref refid="class_class_s_f_m_l_1ab47a3c8fb83d5db1640105bd6771c3da" kindref="member">setIsNewPathConfig</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>cr_assert_eq(test.<ref refid="class_class_s_f_m_l_1a9f308ab330e1a85913cd17c8ef901d71" kindref="member">getIsNewPathConfig</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tests/tests_SFML.cpp"/>
  </compounddef>
</doxygen>
